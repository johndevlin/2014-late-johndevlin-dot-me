
/********
	Work
*/


.main-content.work {
	padding: 0;
}

.preloader {
	@include size(100% 40px);
	background: url('../img/loader.gif') no-repeat center center;
	margin-bottom: 2em;
}

.container.masonry-feed {
	max-width: none;
	
	h1 {
		text-align: center;
	}
	
	ul {
		@include clearfix;
		@include transition (height 0.5s ease-in-out);
		display: none;
	}
	
		
	// Work typography
	.copy-container {
		@include position(absolute, 0 null null 0);
		z-index: 2;
	}

	h2 {
		@include inline-block;
		background: transparentize($base-colour, 0.1);
		color: $background-colour;
		font-size: em(36);
		margin: 0;
		padding: 0.375em 0.5em;
		text-align: left;
	}

	h3 {
		@extend %base-typeface;
		margin: 0 0 1em;

		a {
			color: $body-colour;
			border: none;

			&:hover {
				color: $base-colour;
			}
		}
	}
	
	aside {
		@include transform(translateX(-200%));
		@include transition (all 0.3s ease-in-out);
		margin-left: 20px;
	}
	
	img {
		@include transition (all 0.3s ease-in-out);
		display: block;
		margin: 0;
		width: 100%;
		max-width: 100%;
		z-index: 1;
	}
	
	.button {
		@include transform(translateX(-50%));
		@include position(absolute, null null 50px 50%);
		@include transition (all 0.2s ease-in-out);
		font-size: em(18);
		opacity: 0;
		z-index: 5;
	}
}

p.partner,
p.role {
	@extend .small-title;
	color: #999999;
	font-size: 18px;
	margin: 1.5em 0 0;
	text-transform: uppercase;
}


.role-list {		
	color: $base-colour;
	font-size: 18px;
}


li.masonry-item {
	background: darken($background-colour, 5%);
	display: block;
	float: left;
	margin: 0;
	opacity: 0;
	overflow: hidden;
	width: 50%;
	
	&.small { 
		width: 25%;
		 
		h2 {
			font-size: em(32);
		}
		
		p.partner,
		p.role {
			margin: 1.25em 0 0;
		}
	}
	
	// Show content on hover
	&:hover {
		
		aside {
			@include transform(translateX(0));
		}
		
		img {
			@include transform(scale(1)translateY(25%));
			opacity: 0;
		}
		
		.button {
			opacity: 1;
		}
	}
}


.isotope-loaded li.masonry-item {
	@include animation-name(fadein);
	@include animation-duration(0.6s);
	@include animation-timing-function(ease);
	@include animation-iteration-count(1); 
	@include animation-fill-mode(forwards);
	
	@for $item from 1 through 10 {
		&:nth-child(#{$item}){
			@include animation-delay(0.7s * $item); 
		}
	}
}

// Animating Isotope images
@include keyframes(fadein) {
	0%{
		opacity: 0;
		@include transform(translateY(20px));
	}
	100% {
		opacity: 1;
		@include transform(translateY(0px));
	}
}

